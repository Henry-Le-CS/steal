generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model sessions {
  session_id String  @id @db.VarChar(128)
  expires    Int     @db.UnsignedInt
  data       String? @db.MediumText
}

model orders {
  id          Int       @id @default(autoincrement())
  product_id  Int?
  voucher_id  Int?      @default(0)
  user_id     Int?
  city        String?   @db.VarChar(20)
  address     String?   @db.Text
  phone       String?   @db.VarChar(15)
  email       String?   @db.VarChar(50)
  amount      Int?
  total_price Float?
  note        String?   @db.Text
  status      String?   @db.VarChar(20)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  first_name  String?   @db.Text
  last_name   String?   @db.Text
  users       users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "orders_ibfk_1")
  products    products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "orders_ibfk_2")

  @@index([product_id], map: "product_id")
  @@index([user_id], map: "user_id")
}

model payments {
  id               Int       @id @default(autoincrement())
  payer_first_name String?   @db.VarChar(20)
  payer_last_name  String?   @db.VarChar(20)
  city             String?   @db.VarChar(20)
  address          String?   @db.Text
  phone            String?   @db.VarChar(15)
  email            String?   @db.VarChar(50)
  user_id          Int?
  note             String?   @db.Text
  created_at       DateTime? @db.Timestamp(0)
  users            users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payments_ibfk_1")

  @@index([user_id], map: "user_id")
}

model product_categories {
  id         Int       @id @default(autoincrement())
  category   String?   @db.VarChar(30)
  product_id Int?
  products   products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "product_categories_ibfk_1")

  @@index([product_id], map: "product_id")
}

model product_images {
  id         Int       @id @default(autoincrement())
  image_url  String?   @db.Text
  product_id Int?
  products   products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "product_images_ibfk_1")

  @@index([product_id], map: "product_id")
}

model products {
  id                 Int                  @id @default(autoincrement())
  name               String?              @db.Text
  price              Float?
  amount             Int?
  description        String?              @db.Text
  additional_info    String?              @db.Text
  created_at         DateTime?            @db.Timestamp(0)
  updated_at         DateTime?            @db.Timestamp(0)
  owner_id           Int?
  orders             orders[]
  product_categories product_categories[]
  product_images     product_images[]
  users              users?               @relation(fields: [owner_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "products_ibfk_1")

  @@index([owner_id], map: "owner_id")
}

model users {
  id       Int        @id @default(autoincrement())
  email    String?    @db.Text
  username String?    @db.VarChar(50)
  password String?    @db.VarChar(50)
  salt     String?    @db.VarChar(50)
  orders   orders[]
  payments payments[]
  products products[]
}
